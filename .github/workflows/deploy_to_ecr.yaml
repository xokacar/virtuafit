name: Build and Push Docker Images to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }} 
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} 

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push auth_service image
        run: |
          cd auth_service
          docker build -t auth_service:latest .
          docker tag auth_service:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:auth_service:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:auth_service:latest

      - name: Build and push analytics_service image
        run: |
          cd analytics_service
          docker build -t analytics_service:latest .
          docker tag analytics_service:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:analytics_service:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:analytics_service:latest
          
          
      - name: Build and push workout_service image
        run: |
          cd workout_service
          docker build -t workout_service:latest .
          docker tag workout_service:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}/workout_service:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}/workout_service:latest
